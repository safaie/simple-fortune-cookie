apiVersion: v1
kind: Pod
metadata:
  name: backend
  labels:
    name: backend
spec:
  containers:
  - name: backend
    image: ghcr.io/safaie/backend:latest
    imagePullPolicy: Always
    resources:
      limits:
        memory: "128Mi"
        cpu: "250m"
    ports:
      - containerPort: 9000
    env:
      - name: REDIS_DNS
        value: redis-service

---
apiVersion: v1
kind: Pod
metadata:
  name: frontend
  labels:
    name: frontend
spec:
  containers:
  - name: frontend
    image: ghcr.io/safaie/frontend:latest
    imagePullPolicy: Always
    resources:
      limits:
        memory: "128Mi"
        cpu: "250m"
    ports:
      - containerPort: 8080
    env:
      - name: BACKEND_DNS
        value: backend-service

---
apiVersion: v1
kind: Pod
metadata:
  name: redis
  labels:
    name: redis
spec:
  containers:
  - name: redis
    image: docker.io/redis:6.0.5
    resources:
      limits:
        memory: "128Mi"
        cpu: "100m"
    ports:
      - containerPort: 6379

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  selector:
    name: redis
  ports:
  - port: 6379
    targetPort: 6379

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    name: backend
  ports:
  - port: 9000
    targetPort: 9000

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    name: frontend
  ports:
  - port: 8080
    targetPort: 8080
  type: LoadBalancer

# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: myingress
#   labels:
#     name: myingress
# spec:
#   rules:
#   - host: <Host>
#     http:
#       paths:
#       - pathType: Prefix
#         path: "/"
#         backend:
#           service:
#             name: <Service>
#             port: 
#               number: <Port>

