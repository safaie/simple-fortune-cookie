name: Continuous Integration

on:
  push:
    branches: [ "features/*" ]
  pull_request:
    branches: [ "main" ]
#  workflow_dispatch:

env:
  CONTAINER_REGISTRY: ghcr.io/safaie

jobs:

  build:
    runs-on: ubuntu-latest
#    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18
        
    - name: Build Backend
      run: |
        cd backend
        go mod download github.com/gomodule/redigo
        go build -v

    - name: Build Frontend
      run: |
        cd frontend
        go build -v
    
# Test frontend
    - name: Test
      run: |
        cd frontend
        go test -v
        
    - name: Upload Backend Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        name: backend
        path: backend/
        if-no-files-found: error
        retention-days: 1
    
    - name: Upload Frontend Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        name: frontend
        path: frontend/
        if-no-files-found: error
        retention-days: 1
    
  containerization:
    needs: build
    runs-on: ubuntu-latest
#    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v3

    - name: Download Artifacts
      uses: actions/download-artifact@v3.0.0

    - name: Build Backend Image
      run: |
        cd backend
        docker build . -t ${{ env.CONTAINER_REGISTRY }}/backend:${{ github.sha }}
      
    - name: Scan Backend Image
      uses: Azure/container-scan@v0.1
      with:
        image-name: ${{ env.CONTAINER_REGISTRY }}/backend:${{ github.sha }}
        severity-threshold: CRITICAL
        run-quality-checks: true
    
    - name: Build Frontend Image
      run: |
        cd frontend
        docker build . -t ${{ env.CONTAINER_REGISTRY }}/frontend:${{ github.sha }}
      
    - name: Scan Frontend Image
      uses: Azure/container-scan@v0.1
      with:
        image-name: ${{ env.CONTAINER_REGISTRY }}/frontend:${{ github.sha }}
        severity-threshold: CRITICAL
        run-quality-checks: true
    
    - uses: Azure/docker-login@v1
      with:
        login-server: ${{ env.CONTAINER_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload Backend Image
      run: docker push ${{ env.CONTAINER_REGISTRY }}/backend:${{ github.sha }}

    - name: Upload Frontend Image
      run: docker push ${{ env.CONTAINER_REGISTRY }}/frontend:${{ github.sha }}

#    - name: Login to GitHub Container Registry
#      uses: docker/login-action@v2
#      with:
#        registry: ghcr.io
#        username: ${{ github.actor }}
#        password: ${{ secrets.GITHUB_TOKEN }}
#
#    - name: Build and Push Backend Container Image
#      uses: mr-smithers-excellent/docker-build-push@v5
#      with:
#        image: backend
#        registry: ghcr.io
#        dockerfile: backend/Dockerfile
#        directory: backend
#        tags: latest
#        username: ${{ github.actor }}
#        password: ${{ secrets.GITHUB_TOKEN }}
#
#    - name: Build and Push Frontend Container Image
#      uses: mr-smithers-excellent/docker-build-push@v5
#      with:
#        image: frontend
#        registry: ghcr.io
#        dockerfile: frontend/Dockerfile
#        directory: frontend
#        tags: latest
#        username: ${{ github.actor }}
#        password: ${{ secrets.GITHUB_TOKEN }}
#
